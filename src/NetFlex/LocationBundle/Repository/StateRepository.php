<?php

namespace NetFlex\LocationBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * StateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StateRepository extends EntityRepository
{
	public function findStatesInACountryByName($countryName, $stateHint)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		
		return $qb->select('partial S.{id, name}')
			->from('NetFlexLocationBundle:State', 'S')
			->innerJoin('S.countryId', 'C')
			->where($qb->expr()->andX(
				$qb->expr()->eq('C.name', ':countryName'),
				$qb->expr()->like('S.name', $qb->expr()->literal("%$stateHint%")),
				$qb->expr()->eq('S.status', 1)
			))
			->setParameter('countryName', $countryName)
			->getQuery()
			->getResult();
	}
	
	public function findCitiesByStateId($stateId)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		
		return $qb->select('STATE, CITY')
			->from('NetFlexLocationBundle:State', 'STATE')
			->leftJoin(
				'STATE.cities',
				'CITY',
				'WITH',
				$qb->expr()->andX(
					$qb->expr()->eq('CITY.status', 1)
				),
				'CITY.id'
			)
			->where($qb->expr()->eq('STATE.id', ':stateId'))
			->setParameter('stateId', $stateId)
			->addOrderBy('CITY.name', 'ASC')
			->getQuery()
			->getOneOrNullResult();
	}
    
    public function findStateCount($stateName, $sortColumnFormatted, $sortOrderFormatted)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        
        $qb->select('STATE')
        ->from('NetFlexLocationBundle:State', 'STATE')
        ->innerJoin('STATE.countryId', 'COUNTRY', 'WITH', $qb->expr()->eq('COUNTRY.status', 1))
        ->where( $qb->expr()->notIn('STATE.id', [42, 43, 44, 45, 46, 47]));
        
        if ($stateName) {
            $qb->andWhere($qb->expr()->like('STATE.name', ':stateName'))
            ->setParameter('stateName', "%$stateName%");
        }
        
        $qb->orderBy("STATE.$sortColumnFormatted", $sortOrderFormatted);
        
        $resultSet = $qb->getQuery()->getResult();
        
        return count($resultSet);
    }
    
    public function findState($offset, $limit, $stateName, $sortColumnFormatted, $sortOrderFormatted)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
    
        $qb->select('STATE')
            ->from('NetFlexLocationBundle:State', 'STATE')
            ->innerJoin('STATE.countryId', 'COUNTRY', 'WITH', $qb->expr()->eq('COUNTRY.status', 1))
            ->where( $qb->expr()->notIn('STATE.id', [42, 43, 44, 45, 46, 47]));
    
        if ($stateName) {
            $qb->andWhere($qb->expr()->like('STATE.name', ':stateName'))
                ->setParameter('stateName', "%$stateName%");
        }
    
        $qb->orderBy("STATE.$sortColumnFormatted", $sortOrderFormatted);
        
        $qb->setFirstResult($offset)
        ->setMaxResults($limit);
        
        $resultSet = $qb->getQuery()->getResult();
        
        return $resultSet;
    }
}
