<?php

namespace NetFlex\LocationBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CityRepository extends EntityRepository
{
	public function findCitiesInACountryAndStateByName($countryName, $stateName, $cityHint)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		
		return $qb->select('partial CT.{id, name}')
			->from('NetFlexLocationBundle:City', 'CT')
			->innerJoin('CT.stateId', 'S')
			->innerJoin('CT.countryId', 'C')
			->where($qb->expr()->andX(
				$qb->expr()->eq('C.name', ':countryName'),
				$qb->expr()->eq('S.name', ':stateName'),
				$qb->expr()->like('CT.name', $qb->expr()->literal("%$cityHint%")),
				$qb->expr()->eq('CT.status', 1)
			))
			->setParameters(['countryName' => $countryName, 'stateName' => $stateName])
			->getQuery()
			->getResult();
	}
	
	public function findCityCount($cityName, $sortColumnFormatted, $sortOrderFormatted)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        
        $qb->select('CITY')
        ->from('NetFlexLocationBundle:City', 'CITY')
        ->innerJoin('CITY.countryId', 'COUNTRY', 'WITH', $qb->expr()->eq('COUNTRY.status', 1))
        ->innerJoin('CITY.stateId', 'STATE', 'WITH', $qb->expr()->andX(
            $qb->expr()->notIn('STATE.id', [42, 43, 44, 45, 46, 47]),
            $qb->expr()->eq('STATE.status', 1)
        ));
        
        if ($cityName) {
            $qb->andWhere($qb->expr()->like('CITY.name', ':cityName'))
            ->setParameter('cityName', "%$cityName%");
        }
        
        $qb->orderBy("CITY.$sortColumnFormatted", $sortOrderFormatted);
        
        $resultSet = $qb->getQuery()->getResult();
        
        return count($resultSet);
    }
    
    public function findCity($offset, $limit, $cityName, $sortColumnFormatted, $sortOrderFormatted)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
    
        $qb->select('CITY')
        ->from('NetFlexLocationBundle:City', 'CITY')
        ->innerJoin('CITY.countryId', 'COUNTRY', 'WITH', $qb->expr()->eq('COUNTRY.status', 1))
        ->innerJoin('CITY.stateId', 'STATE', 'WITH', $qb->expr()->andX(
            $qb->expr()->notIn('STATE.id', [42, 43, 44, 45, 46, 47]),
            $qb->expr()->eq('STATE.status', 1)
        ));
    
        if ($cityName) {
            $qb->andWhere($qb->expr()->like('CITY.name', ':cityName'))
            ->setParameter('cityName', "%$cityName%");
        }
    
        $qb->orderBy("CITY.$sortColumnFormatted", $sortOrderFormatted);
        
        $qb->setFirstResult($offset)
        ->setMaxResults($limit);
    
        $resultSet = $qb->getQuery()->getResult();
        
        return $resultSet;
    }
}
